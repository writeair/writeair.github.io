# -*- coding: utf-8 -*-
"""
Created on Sun Feb 17 12:29:02 2019

@author: 48572
"""
from sklearn import linear_model
import numpy
import matplotlib.pyplot as plt#用于作图
f = open("data_example.txt","r")   #设置文件对象
str = f.read()     #将txt文件的所有内容读入到字符串str中
f.close()   #将文件关闭
V_data=str.split("\n")[:-1]
V_data_lenght=len(V_data)
V_divdata=[]
data=[]
data_line=[]
for i in range(V_data_lenght):
    V_divdata.append(V_data[i][4:])
V_divdata_lenght=len(V_divdata)    
for i in range(V_divdata_lenght):
    data.append(V_divdata[i].split(" "))
V_divdata_divlenght=len(data[0])
for i in range(V_divdata_divlenght):
    for j in range(V_divdata_lenght):    
        data_line.append(int(data[j][i]))
data_line=numpy.array(data_line).reshape(V_divdata_divlenght,V_divdata_lenght)
x = numpy.arange(0,V_divdata_lenght)  
plt.xlabel('V')  
plt.ylabel('times')  
#print(V_divdata)
#print(V_divdata_lenght)
#print(data)
#print(V_divdata_divlenght)
#print(data_line)
plt.title("Five-channel sampling results")
plt.plot(x,data_line[0],label="$outleft$") 
plt.plot(x,data_line[1],label="$inleft$") 
'''plt.plot(x,data_line[2],label="$center$")   
plt.plot(x,data_line[3],label="$inright$")   
plt.plot(x,data_line[4],label="$outright$") '''   

'''获取第一条斜率和截距'''
reg = linear_model.LinearRegression()
reg.fit (x.reshape(-1,1),numpy.array(data_line[0]).reshape(-1,1))
#斜率为
k=reg.coef_
#截距为
b=reg.intercept_
y0=k*x+b
plt.plot(x,y0.reshape(-1,1),label="$example$") 
'''获取第二条斜率和截距'''
reg1 = linear_model.LinearRegression()
reg1.fit (x.reshape(-1,1),numpy.array(data_line[1]).reshape(-1,1))
#斜率为
k1=reg1.coef_
#截距为
b1=reg1.intercept_
y1=k1*x+b1
plt.plot(x,y1.reshape(-1,1),label="$example2$") 

plt.legend()
plt.show()  
'''first'''
print('...first...')
print('k',k)
print('b',b)
''''second'''
print('...second...')
print('k1:',k1)
print('b1:',b1)
print('...specific value ...')
print('k/k1:',k/k1)